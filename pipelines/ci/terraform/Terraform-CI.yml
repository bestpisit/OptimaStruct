# Variable 'rgterraform' was defined in the Variables tab
# Variable 'saname' was defined in the Variables tab
steps:
  - checkout: self
    clean: true
    fetchTags: false
  - task: replacetokens@5
    displayName: Replace tokens in **/*.yml
    inputs:
      rootDirectory: pipelines/ci/terraform
      targetFiles: '**/*.yml'
      tokenPattern: rm
  - task: PowerShell@2
    displayName: PowerShell Script
    inputs:
      targetType: inline
      script: >
        $rgterraform = "rg-__projectname__-__environment__"
        $saterraform = "sa__projectname____environment__"

        Write-Host "##vso[task.setvariable variable=rgterraform]$rgterraform"
        Write-Host "##vso[task.setvariable variable=saterraform]$saterraform"
  - task: replacetokens@5
    displayName: Replace tokens in **/*.yml
    inputs:
      rootDirectory: pipelines/ci/terraform
      targetFiles: '**/*.yml'
      tokenPattern: rm
  - task: AzureCLI@2
    displayName: 'Setup terraform storage account'
    inputs:
      azureSubscription: 'sc-terraform'
      scriptType: ps
      scriptLocation: inlineScript
      inlineScript: >-
        az storage account create --name __saname__ --resource-group __rgterraform__ --location southeastasia --sku Standard_LRS
        az storage container create --name terraform --account-name __saname__
        az storage account keys list -g __rgterraform__ -n __saname__
        $key = (az storage account keys list --account-name __saname__ --resource-group __rgterraform__ --query "[0].value" --output tsv)
        Write-Host $key
        Write-Host "##vso[task.setvariable variable=key;]$key"
      powerShellErrorActionPreference: continue
      
  - task: ms-devlabs.custom-terraform-tasks.custom-terraform-installer-task.TerraformInstaller@1
    displayName: Install Terraform latest
    inputs:
      workingDirectory: 'devops101/terraform'
      terraformVersion: 'latest'

  - task: TerraformTaskV4@4
    inputs:
      provider: 'azurerm'
      command: 'init'
      workingDirectory: '$(System.DefaultWorkingDirectory)/terraform'
      backendServiceArm: 'sc-terraform'
      backendAzureRmResourceGroupName: '__rgterraform__'
      backendAzureRmStorageAccountName: '__saname__'
      backendAzureRmContainerName: 'terraform'
      backendAzureRmKey: 'terraform.tfstate'
  - task: TerraformTaskV4@4
    displayName: 'Terraform : plan'
    inputs:
      command: plan
      workingDirectory: devops101/terraform
      environmentServiceNameAzureRM: 'sc-terraform'
  - task: TerraformTaskV4@4
    displayName: 'Terraform : azurerm'
    continueOnError: True
    inputs:
      command: apply
      workingDirectory: devops101/terraform
      environmentServiceNameAzureRM: 'sc-terraform'
  - task: AzureCLI@2
    displayName: 'Get acr variable'
    inputs:
      connectedServiceNameARM: 'sc-terraform'
      scriptType: ps
      scriptLocation: inlineScript
      inlineScript: >-
        $username=$(az acr credential show --name acr__projectname____environment__ --resource-group rg-__projectname__-__environment__ --query "username" --output tsv)
        $password=$(az acr credential show --name acr__projectname____environment__ --resource-group rg-__projectname__-__environment__ --query "passwords[0].value" --output tsv)
        $loginserver = $username + ".azurecr.io"
        Write-Host $username $password $loginserver
        Write-Host "##vso[task.setvariable variable=username]$username"
        Write-Host "##vso[task.setvariable variable=password]$password"
        Write-Host "##vso[task.setvariable variable=loginserver]$loginserver"
  - task: replacetokens@5
    displayName: Replace variable to deploy pipeline YML
    inputs:
      rootDirectory: pipelines/cd
      targetFiles: '**/*.yml'
      tokenPattern: rm
  - task: PublishPipelineArtifact@1
    displayName: Publish terraform Artifact
    inputs:
      path: terraform
      artifactName: terraform
  - task: PublishPipelineArtifact@1
    displayName: Publish Pipeline Artifact
    inputs:
      path: pipelines
      artifactName: pipelines
  - task: PublishPipelineArtifact@1
    displayName: Publish web Artifact
    inputs:
      path: web
      artifactName: web